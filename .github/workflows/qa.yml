name: Retag and Deploy QA
on:
  release:
    types: [created]

env:
  ARTIFACT_NAME: actions-demo

jobs:
  # Build test and deploy to qa when a release tag is created
  build_test_and_deploy_qa:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Preparing job
        run: |
          SHA_SHORT=$(echo $GITHUB_SHA | cut -c1-7)
          echo "SHA_SHORT=$SHA_SHORT" >> $GITHUB_ENV
          echo "Short SHA: $SHA_SHORT"

          IMAGE_DEV="kennyd3d/${{ env.ARTIFACT_NAME }}:$SHA_SHORT"
          IMAGE_QA="kennyd3d/${{ env.ARTIFACT_NAME }}:${{ github.event.release.tag_name }}"

          echo "IMAGE_DEV=$IMAGE_DEV" >> $GITHUB_ENV
          echo "IMAGE_QA=$IMAGE_QA" >> $GITHUB_ENV

          echo "DEV: $IMAGE_DEV"
          echo "QA: $IMAGE_QA"

      - name: Retag and push Docker Image with Release Name
        run: |
          docker pull ${{ env.IMAGE_DEV }}
          docker tag ${{ env.IMAGE_DEV }} ${{ env.IMAGE_QA }}
          docker push ${{ env.IMAGE_QA }}

      - name: Deploy to Stable k8
        run: |
          echo "Test to deploy to Stable k8 using image ${{ env.IMAGE_QA }}"

      - name: Give possible failure hint
        if: failure()
        run: |
          echo "# ❌ QA Failed to Deploy: Did you make sure you tagged the same commit that merged to Dev? 🤔" >> $GITHUB_STEP_SUMMARY
          echo "## DEV deployment: ${{ env.IMAGE_DEV }}" >> $GITHUB_STEP_SUMMARY
          echo "## QA Deployment: ${{ env.IMAGE_QA }}" >> $GITHUB_STEP_SUMMARY

      - name: Run success message on successful deployment
        if: success()
        run: |
          echo "# 🎊 Successfully deployed ${{ env.IMAGE_QA }} to QA ✅" >> $GITHUB_STEP_SUMMARY