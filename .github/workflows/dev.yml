name: Build and Deploy for Dev, QA, and Stable

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - dev
  push:
    tags:
      - "*"
  release:
    types: [created]

env:
  ARTIFACT_NAME: hello-world

jobs:
  build_test_and_deploy_dev:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Short SHA
        run: |
          echo "SHA_SHORT=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Print Short SHA
        run: |
          echo "Short SHA: ${{ env.SHA_SHORT }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run tests
        run: |
          echo "Fake running some tests"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            kennyd3d/actions-demo:${{ env.SHA_SHORT }}

      - name: Deploy to k8
        run: |
          echo "Pretending to deploy to k8"

  build_test_and_deploy_qa:
    needs: build_test_and_deploy_dev
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Tag Name
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          # Validate and sanitize the tag name
          if [[ ! "$TAG_NAME" =~ ^[a-z0-9]+([._-][a-z0-9]+)*$ ]]; then
            echo "Invalid tag name: $TAG_NAME. Tag names must be lowercase and can include dashes, dots, or underscores."
            exit 1
          fi
          # Ensure tag name is a valid Docker tag
          if [ ${#TAG_NAME} -gt 128 ]; then
            echo "Tag name is too long. Must be less than 128 characters."
            exit 1
          fi
          TAG_COMMIT_SHA=$(git rev-list -n 1 $TAG_NAME)
          echo "TAG_COMMIT_SHA=$TAG_COMMIT_SHA" >> $GITHUB_ENV
          echo "SHA_SHORT=$(echo $TAG_COMMIT_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Print Tag Name and SHA
        run: |
          echo "Tag Name: ${{ env.TAG_NAME }}"
          echo "Full SHA: ${{ env.TAG_COMMIT_SHA }}"
          echo "Short SHA: ${{ env.SHA_SHORT }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull Docker Image for QA
        run: |
          docker pull kennyd3d/actions-demo:${{ env.SHA_SHORT }}

      - name: Retag Docker Image with Tag Name
        run: |
          # Sanitize tag name for Docker
          SANITIZED_TAG_NAME=$(echo "${{ env.TAG_NAME }}" | sed 's/[^a-z0-9._-]/_/g')
          docker tag kennyd3d/actions-demo:${{ env.SHA_SHORT }} kennyd3d/actions-demo:${SANITIZED_TAG_NAME}

      - name: Run regression tests
        run: |
          echo "Fake run of regression tests"

      - name: Deploy to QA k8
        run: |
          echo "Fake deploy to QA k8 using image kennyd3d/actions-demo:${{ env.TAG_NAME }}"

  build_test_and_deploy_stable:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Release Tag Name
        id: get_release_tag_name
        run: |
          RELEASE_TAG_NAME=${{ github.event.release.tag_name }}
          RELEASE_NAME=${{ github.event.release.name }}
          echo "RELEASE_TAG_NAME=$RELEASE_TAG_NAME" >> $GITHUB_ENV
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull Docker Image for Stable
        run: |
          docker pull kennyd3d/actions-demo:${{ env.TAG_NAME }}

      - name: Retag Docker Image with Release Name
        run: |
          docker tag kennyd3d/actions-demo:${{ env.TAG_NAME }} kennyd3d/actions-demo:${{ env.RELEASE_TAG_NAME }}

      - name: Deploy to Stable k8
        run: |
          echo "Pretending to deploy to Stable k8 using image kennyd3d/actions-demo:${{ env.RELEASE_TAG_NAME }}"
